#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyMuaBanLinhKien")]
	public partial class QLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertbill(bill instance);
    partial void Updatebill(bill instance);
    partial void Deletebill(bill instance);
    partial void Insertwarranty_detail(warranty_detail instance);
    partial void Updatewarranty_detail(warranty_detail instance);
    partial void Deletewarranty_detail(warranty_detail instance);
    partial void Insertbill_detail(bill_detail instance);
    partial void Updatebill_detail(bill_detail instance);
    partial void Deletebill_detail(bill_detail instance);
    partial void Insertcustomer(customer instance);
    partial void Updatecustomer(customer instance);
    partial void Deletecustomer(customer instance);
    partial void Insertpermission(permission instance);
    partial void Updatepermission(permission instance);
    partial void Deletepermission(permission instance);
    partial void Insertproduct(product instance);
    partial void Updateproduct(product instance);
    partial void Deleteproduct(product instance);
    partial void Insertprovider(provider instance);
    partial void Updateprovider(provider instance);
    partial void Deleteprovider(provider instance);
    partial void Insertreceipt(receipt instance);
    partial void Updatereceipt(receipt instance);
    partial void Deletereceipt(receipt instance);
    partial void Insertreceipt_detail(receipt_detail instance);
    partial void Updatereceipt_detail(receipt_detail instance);
    partial void Deletereceipt_detail(receipt_detail instance);
    partial void Insertstaff_permission(staff_permission instance);
    partial void Updatestaff_permission(staff_permission instance);
    partial void Deletestaff_permission(staff_permission instance);
    partial void Insertwarranty(warranty instance);
    partial void Updatewarranty(warranty instance);
    partial void Deletewarranty(warranty instance);
    partial void Insertstaff(staff instance);
    partial void Updatestaff(staff instance);
    partial void Deletestaff(staff instance);
    partial void Insertcategory(category instance);
    partial void Updatecategory(category instance);
    partial void Deletecategory(category instance);
    #endregion
		
		public QLDataContext() : 
				base(global::DAL.Properties.Settings.Default.LocalConnection, mappingSource)
		{
			OnCreated();
		}
		
		public QLDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<bill> bills
		{
			get
			{
				return this.GetTable<bill>();
			}
		}
		
		public System.Data.Linq.Table<warranty_detail> warranty_details
		{
			get
			{
				return this.GetTable<warranty_detail>();
			}
		}
		
		public System.Data.Linq.Table<bill_detail> bill_details
		{
			get
			{
				return this.GetTable<bill_detail>();
			}
		}
		
		public System.Data.Linq.Table<customer> customers
		{
			get
			{
				return this.GetTable<customer>();
			}
		}
		
		public System.Data.Linq.Table<permission> permissions
		{
			get
			{
				return this.GetTable<permission>();
			}
		}
		
		public System.Data.Linq.Table<product> products
		{
			get
			{
				return this.GetTable<product>();
			}
		}
		
		public System.Data.Linq.Table<provider> providers
		{
			get
			{
				return this.GetTable<provider>();
			}
		}
		
		public System.Data.Linq.Table<provider_product> provider_products
		{
			get
			{
				return this.GetTable<provider_product>();
			}
		}
		
		public System.Data.Linq.Table<receipt> receipts
		{
			get
			{
				return this.GetTable<receipt>();
			}
		}
		
		public System.Data.Linq.Table<receipt_detail> receipt_details
		{
			get
			{
				return this.GetTable<receipt_detail>();
			}
		}
		
		public System.Data.Linq.Table<staff_permission> staff_permissions
		{
			get
			{
				return this.GetTable<staff_permission>();
			}
		}
		
		public System.Data.Linq.Table<warranty> warranties
		{
			get
			{
				return this.GetTable<warranty>();
			}
		}
		
		public System.Data.Linq.Table<staff> staffs
		{
			get
			{
				return this.GetTable<staff>();
			}
		}
		
		public System.Data.Linq.Table<category> categories
		{
			get
			{
				return this.GetTable<category>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bill")]
	public partial class bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _customer_id;
		
		private System.DateTime _created;
		
		private string _staff_id;
		
		private string _type;
		
		private System.Nullable<System.DateTime> _modified;
		
		private bool _trash;
		
		private EntitySet<bill_detail> _bill_details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void Oncustomer_idChanging(string value);
    partial void Oncustomer_idChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void Onstaff_idChanging(string value);
    partial void Onstaff_idChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnmodifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnmodifiedChanged();
    partial void OntrashChanging(bool value);
    partial void OntrashChanged();
    #endregion
		
		public bill()
		{
			this._bill_details = new EntitySet<bill_detail>(new Action<bill_detail>(this.attach_bill_details), new Action<bill_detail>(this.detach_bill_details));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff_id", DbType="NVarChar(10)")]
		public string staff_id
		{
			get
			{
				return this._staff_id;
			}
			set
			{
				if ((this._staff_id != value))
				{
					this.Onstaff_idChanging(value);
					this.SendPropertyChanging();
					this._staff_id = value;
					this.SendPropertyChanged("staff_id");
					this.Onstaff_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified", DbType="DateTime")]
		public System.Nullable<System.DateTime> modified
		{
			get
			{
				return this._modified;
			}
			set
			{
				if ((this._modified != value))
				{
					this.OnmodifiedChanging(value);
					this.SendPropertyChanging();
					this._modified = value;
					this.SendPropertyChanged("modified");
					this.OnmodifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trash", DbType="Bit NOT NULL")]
		public bool trash
		{
			get
			{
				return this._trash;
			}
			set
			{
				if ((this._trash != value))
				{
					this.OntrashChanging(value);
					this.SendPropertyChanging();
					this._trash = value;
					this.SendPropertyChanged("trash");
					this.OntrashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bill_bill_detail", Storage="_bill_details", ThisKey="id", OtherKey="bill_id")]
		public EntitySet<bill_detail> bill_details
		{
			get
			{
				return this._bill_details;
			}
			set
			{
				this._bill_details.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_bill_details(bill_detail entity)
		{
			this.SendPropertyChanging();
			entity.bill = this;
		}
		
		private void detach_bill_details(bill_detail entity)
		{
			this.SendPropertyChanging();
			entity.bill = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.warranty_detail")]
	public partial class warranty_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _warranty_id;
		
		private string _product_id;
		
		private System.DateTime _purchased;
		
		private string _error;
		
		private string _status;
		
		private int _quantity;
		
		private System.DateTime _created;
		
		private System.Nullable<System.DateTime> _modified;
		
		private bool _trash;
		
		private EntityRef<product> _product;
		
		private EntityRef<warranty> _warranty;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void Onwarranty_idChanging(string value);
    partial void Onwarranty_idChanged();
    partial void Onproduct_idChanging(string value);
    partial void Onproduct_idChanged();
    partial void OnpurchasedChanging(System.DateTime value);
    partial void OnpurchasedChanged();
    partial void OnerrorChanging(string value);
    partial void OnerrorChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnmodifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnmodifiedChanged();
    partial void OntrashChanging(bool value);
    partial void OntrashChanged();
    #endregion
		
		public warranty_detail()
		{
			this._product = default(EntityRef<product>);
			this._warranty = default(EntityRef<warranty>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warranty_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string warranty_id
		{
			get
			{
				return this._warranty_id;
			}
			set
			{
				if ((this._warranty_id != value))
				{
					if (this._warranty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onwarranty_idChanging(value);
					this.SendPropertyChanging();
					this._warranty_id = value;
					this.SendPropertyChanged("warranty_id");
					this.Onwarranty_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purchased", DbType="Date NOT NULL")]
		public System.DateTime purchased
		{
			get
			{
				return this._purchased;
			}
			set
			{
				if ((this._purchased != value))
				{
					this.OnpurchasedChanging(value);
					this.SendPropertyChanging();
					this._purchased = value;
					this.SendPropertyChanged("purchased");
					this.OnpurchasedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_error", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string error
		{
			get
			{
				return this._error;
			}
			set
			{
				if ((this._error != value))
				{
					this.OnerrorChanging(value);
					this.SendPropertyChanging();
					this._error = value;
					this.SendPropertyChanged("error");
					this.OnerrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified", DbType="DateTime")]
		public System.Nullable<System.DateTime> modified
		{
			get
			{
				return this._modified;
			}
			set
			{
				if ((this._modified != value))
				{
					this.OnmodifiedChanging(value);
					this.SendPropertyChanging();
					this._modified = value;
					this.SendPropertyChanged("modified");
					this.OnmodifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trash", DbType="Bit NOT NULL")]
		public bool trash
		{
			get
			{
				return this._trash;
			}
			set
			{
				if ((this._trash != value))
				{
					this.OntrashChanging(value);
					this.SendPropertyChanging();
					this._trash = value;
					this.SendPropertyChanged("trash");
					this.OntrashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_warranty_detail", Storage="_product", ThisKey="product_id", OtherKey="id", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.warranty_details.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.warranty_details.Add(this);
						this._product_id = value.id;
					}
					else
					{
						this._product_id = default(string);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="warranty_warranty_detail", Storage="_warranty", ThisKey="warranty_id", OtherKey="id", IsForeignKey=true)]
		public warranty warranty
		{
			get
			{
				return this._warranty.Entity;
			}
			set
			{
				warranty previousValue = this._warranty.Entity;
				if (((previousValue != value) 
							|| (this._warranty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._warranty.Entity = null;
						previousValue.warranty_details.Remove(this);
					}
					this._warranty.Entity = value;
					if ((value != null))
					{
						value.warranty_details.Add(this);
						this._warranty_id = value.id;
					}
					else
					{
						this._warranty_id = default(string);
					}
					this.SendPropertyChanged("warranty");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bill_detail")]
	public partial class bill_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _bill_id;
		
		private string _product_id;
		
		private int _quantity;
		
		private int _monetized;
		
		private System.DateTime _created;
		
		private System.Nullable<System.DateTime> _modified;
		
		private bool _trash;
		
		private EntityRef<bill> _bill;
		
		private EntityRef<product> _product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void Onbill_idChanging(string value);
    partial void Onbill_idChanged();
    partial void Onproduct_idChanging(string value);
    partial void Onproduct_idChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void OnmonetizedChanging(int value);
    partial void OnmonetizedChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnmodifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnmodifiedChanged();
    partial void OntrashChanging(bool value);
    partial void OntrashChanged();
    #endregion
		
		public bill_detail()
		{
			this._bill = default(EntityRef<bill>);
			this._product = default(EntityRef<product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bill_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string bill_id
		{
			get
			{
				return this._bill_id;
			}
			set
			{
				if ((this._bill_id != value))
				{
					if (this._bill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbill_idChanging(value);
					this.SendPropertyChanging();
					this._bill_id = value;
					this.SendPropertyChanged("bill_id");
					this.Onbill_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monetized", DbType="Int NOT NULL")]
		public int monetized
		{
			get
			{
				return this._monetized;
			}
			set
			{
				if ((this._monetized != value))
				{
					this.OnmonetizedChanging(value);
					this.SendPropertyChanging();
					this._monetized = value;
					this.SendPropertyChanged("monetized");
					this.OnmonetizedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified", DbType="DateTime")]
		public System.Nullable<System.DateTime> modified
		{
			get
			{
				return this._modified;
			}
			set
			{
				if ((this._modified != value))
				{
					this.OnmodifiedChanging(value);
					this.SendPropertyChanging();
					this._modified = value;
					this.SendPropertyChanged("modified");
					this.OnmodifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trash", DbType="Bit NOT NULL")]
		public bool trash
		{
			get
			{
				return this._trash;
			}
			set
			{
				if ((this._trash != value))
				{
					this.OntrashChanging(value);
					this.SendPropertyChanging();
					this._trash = value;
					this.SendPropertyChanged("trash");
					this.OntrashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bill_bill_detail", Storage="_bill", ThisKey="bill_id", OtherKey="id", IsForeignKey=true)]
		public bill bill
		{
			get
			{
				return this._bill.Entity;
			}
			set
			{
				bill previousValue = this._bill.Entity;
				if (((previousValue != value) 
							|| (this._bill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._bill.Entity = null;
						previousValue.bill_details.Remove(this);
					}
					this._bill.Entity = value;
					if ((value != null))
					{
						value.bill_details.Add(this);
						this._bill_id = value.id;
					}
					else
					{
						this._bill_id = default(string);
					}
					this.SendPropertyChanged("bill");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_bill_detail", Storage="_product", ThisKey="product_id", OtherKey="id", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.bill_details.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.bill_details.Add(this);
						this._product_id = value.id;
					}
					else
					{
						this._product_id = default(string);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customer")]
	public partial class customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name;
		
		private string _address;
		
		private string _phone;
		
		private System.DateTime _created;
		
		private System.Nullable<System.DateTime> _modified;
		
		private bool _trash;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnmodifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnmodifiedChanged();
    partial void OntrashChanging(bool value);
    partial void OntrashChanged();
    #endregion
		
		public customer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified", DbType="DateTime")]
		public System.Nullable<System.DateTime> modified
		{
			get
			{
				return this._modified;
			}
			set
			{
				if ((this._modified != value))
				{
					this.OnmodifiedChanging(value);
					this.SendPropertyChanging();
					this._modified = value;
					this.SendPropertyChanged("modified");
					this.OnmodifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trash", DbType="Bit NOT NULL")]
		public bool trash
		{
			get
			{
				return this._trash;
			}
			set
			{
				if ((this._trash != value))
				{
					this.OntrashChanging(value);
					this.SendPropertyChanging();
					this._trash = value;
					this.SendPropertyChanged("trash");
					this.OntrashChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.permission")]
	public partial class permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name;
		
		private string _describe;
		
		private System.DateTime _created;
		
		private System.Nullable<System.DateTime> _modified;
		
		private bool _trash;
		
		private EntitySet<staff_permission> _staff_permissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescribeChanging(string value);
    partial void OndescribeChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnmodifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnmodifiedChanged();
    partial void OntrashChanging(bool value);
    partial void OntrashChanged();
    #endregion
		
		public permission()
		{
			this._staff_permissions = new EntitySet<staff_permission>(new Action<staff_permission>(this.attach_staff_permissions), new Action<staff_permission>(this.detach_staff_permissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_describe", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string describe
		{
			get
			{
				return this._describe;
			}
			set
			{
				if ((this._describe != value))
				{
					this.OndescribeChanging(value);
					this.SendPropertyChanging();
					this._describe = value;
					this.SendPropertyChanged("describe");
					this.OndescribeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified", DbType="DateTime")]
		public System.Nullable<System.DateTime> modified
		{
			get
			{
				return this._modified;
			}
			set
			{
				if ((this._modified != value))
				{
					this.OnmodifiedChanging(value);
					this.SendPropertyChanging();
					this._modified = value;
					this.SendPropertyChanged("modified");
					this.OnmodifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trash", DbType="Bit NOT NULL")]
		public bool trash
		{
			get
			{
				return this._trash;
			}
			set
			{
				if ((this._trash != value))
				{
					this.OntrashChanging(value);
					this.SendPropertyChanging();
					this._trash = value;
					this.SendPropertyChanged("trash");
					this.OntrashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="permission_staff_permission", Storage="_staff_permissions", ThisKey="id", OtherKey="permission_id")]
		public EntitySet<staff_permission> staff_permissions
		{
			get
			{
				return this._staff_permissions;
			}
			set
			{
				this._staff_permissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_staff_permissions(staff_permission entity)
		{
			this.SendPropertyChanging();
			entity.permission = this;
		}
		
		private void detach_staff_permissions(staff_permission entity)
		{
			this.SendPropertyChanging();
			entity.permission = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product")]
	public partial class product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name;
		
		private string _cat_id;
		
		private int _quantity;
		
		private string _unit;
		
		private int _price;
		
		private int _warranty;
		
		private string _describe;
		
		private System.DateTime _created;
		
		private System.Nullable<System.DateTime> _modified;
		
		private bool _trash;
		
		private EntitySet<warranty_detail> _warranty_details;
		
		private EntitySet<bill_detail> _bill_details;
		
		private EntitySet<receipt_detail> _receipt_details;
		
		private EntityRef<category> _category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Oncat_idChanging(string value);
    partial void Oncat_idChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void OnunitChanging(string value);
    partial void OnunitChanged();
    partial void OnpriceChanging(int value);
    partial void OnpriceChanged();
    partial void OnwarrantyChanging(int value);
    partial void OnwarrantyChanged();
    partial void OndescribeChanging(string value);
    partial void OndescribeChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnmodifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnmodifiedChanged();
    partial void OntrashChanging(bool value);
    partial void OntrashChanged();
    #endregion
		
		public product()
		{
			this._warranty_details = new EntitySet<warranty_detail>(new Action<warranty_detail>(this.attach_warranty_details), new Action<warranty_detail>(this.detach_warranty_details));
			this._bill_details = new EntitySet<bill_detail>(new Action<bill_detail>(this.attach_bill_details), new Action<bill_detail>(this.detach_bill_details));
			this._receipt_details = new EntitySet<receipt_detail>(new Action<receipt_detail>(this.attach_receipt_details), new Action<receipt_detail>(this.detach_receipt_details));
			this._category = default(EntityRef<category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string cat_id
		{
			get
			{
				return this._cat_id;
			}
			set
			{
				if ((this._cat_id != value))
				{
					if (this._category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncat_idChanging(value);
					this.SendPropertyChanging();
					this._cat_id = value;
					this.SendPropertyChanged("cat_id");
					this.Oncat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unit", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string unit
		{
			get
			{
				return this._unit;
			}
			set
			{
				if ((this._unit != value))
				{
					this.OnunitChanging(value);
					this.SendPropertyChanging();
					this._unit = value;
					this.SendPropertyChanged("unit");
					this.OnunitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int NOT NULL")]
		public int price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warranty", DbType="Int NOT NULL")]
		public int warranty
		{
			get
			{
				return this._warranty;
			}
			set
			{
				if ((this._warranty != value))
				{
					this.OnwarrantyChanging(value);
					this.SendPropertyChanging();
					this._warranty = value;
					this.SendPropertyChanged("warranty");
					this.OnwarrantyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_describe", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string describe
		{
			get
			{
				return this._describe;
			}
			set
			{
				if ((this._describe != value))
				{
					this.OndescribeChanging(value);
					this.SendPropertyChanging();
					this._describe = value;
					this.SendPropertyChanged("describe");
					this.OndescribeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified", DbType="DateTime")]
		public System.Nullable<System.DateTime> modified
		{
			get
			{
				return this._modified;
			}
			set
			{
				if ((this._modified != value))
				{
					this.OnmodifiedChanging(value);
					this.SendPropertyChanging();
					this._modified = value;
					this.SendPropertyChanged("modified");
					this.OnmodifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trash", DbType="Bit NOT NULL")]
		public bool trash
		{
			get
			{
				return this._trash;
			}
			set
			{
				if ((this._trash != value))
				{
					this.OntrashChanging(value);
					this.SendPropertyChanging();
					this._trash = value;
					this.SendPropertyChanged("trash");
					this.OntrashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_warranty_detail", Storage="_warranty_details", ThisKey="id", OtherKey="product_id")]
		public EntitySet<warranty_detail> warranty_details
		{
			get
			{
				return this._warranty_details;
			}
			set
			{
				this._warranty_details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_bill_detail", Storage="_bill_details", ThisKey="id", OtherKey="product_id")]
		public EntitySet<bill_detail> bill_details
		{
			get
			{
				return this._bill_details;
			}
			set
			{
				this._bill_details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_receipt_detail", Storage="_receipt_details", ThisKey="id", OtherKey="product_id")]
		public EntitySet<receipt_detail> receipt_details
		{
			get
			{
				return this._receipt_details;
			}
			set
			{
				this._receipt_details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_product", Storage="_category", ThisKey="cat_id", OtherKey="cat_id", IsForeignKey=true)]
		public category category
		{
			get
			{
				return this._category.Entity;
			}
			set
			{
				category previousValue = this._category.Entity;
				if (((previousValue != value) 
							|| (this._category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._category.Entity = null;
						previousValue.products.Remove(this);
					}
					this._category.Entity = value;
					if ((value != null))
					{
						value.products.Add(this);
						this._cat_id = value.cat_id;
					}
					else
					{
						this._cat_id = default(string);
					}
					this.SendPropertyChanged("category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_warranty_details(warranty_detail entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_warranty_details(warranty_detail entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
		
		private void attach_bill_details(bill_detail entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_bill_details(bill_detail entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
		
		private void attach_receipt_details(receipt_detail entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_receipt_details(receipt_detail entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.provider")]
	public partial class provider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name;
		
		private string _address;
		
		private string _phone;
		
		private string _email;
		
		private string _website;
		
		private System.DateTime _created;
		
		private System.Nullable<System.DateTime> _modified;
		
		private bool _trash;
		
		private EntitySet<receipt> _receipts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnwebsiteChanging(string value);
    partial void OnwebsiteChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnmodifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnmodifiedChanged();
    partial void OntrashChanging(bool value);
    partial void OntrashChanged();
    #endregion
		
		public provider()
		{
			this._receipts = new EntitySet<receipt>(new Action<receipt>(this.attach_receipts), new Action<receipt>(this.detach_receipts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_website", DbType="NVarChar(200)")]
		public string website
		{
			get
			{
				return this._website;
			}
			set
			{
				if ((this._website != value))
				{
					this.OnwebsiteChanging(value);
					this.SendPropertyChanging();
					this._website = value;
					this.SendPropertyChanged("website");
					this.OnwebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified", DbType="DateTime")]
		public System.Nullable<System.DateTime> modified
		{
			get
			{
				return this._modified;
			}
			set
			{
				if ((this._modified != value))
				{
					this.OnmodifiedChanging(value);
					this.SendPropertyChanging();
					this._modified = value;
					this.SendPropertyChanged("modified");
					this.OnmodifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trash", DbType="Bit NOT NULL")]
		public bool trash
		{
			get
			{
				return this._trash;
			}
			set
			{
				if ((this._trash != value))
				{
					this.OntrashChanging(value);
					this.SendPropertyChanging();
					this._trash = value;
					this.SendPropertyChanged("trash");
					this.OntrashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="provider_receipt", Storage="_receipts", ThisKey="id", OtherKey="provider_id")]
		public EntitySet<receipt> receipts
		{
			get
			{
				return this._receipts;
			}
			set
			{
				this._receipts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_receipts(receipt entity)
		{
			this.SendPropertyChanging();
			entity.provider = this;
		}
		
		private void detach_receipts(receipt entity)
		{
			this.SendPropertyChanging();
			entity.provider = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.provider_product")]
	public partial class provider_product
	{
		
		private string _id;
		
		private string _product_id;
		
		private string _provider_id;
		
		private System.DateTime _created;
		
		private System.Nullable<System.DateTime> _modified;
		
		private bool _trash;
		
		public provider_product()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					this._product_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_provider_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string provider_id
		{
			get
			{
				return this._provider_id;
			}
			set
			{
				if ((this._provider_id != value))
				{
					this._provider_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this._created = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified", DbType="DateTime")]
		public System.Nullable<System.DateTime> modified
		{
			get
			{
				return this._modified;
			}
			set
			{
				if ((this._modified != value))
				{
					this._modified = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trash", DbType="Bit NOT NULL")]
		public bool trash
		{
			get
			{
				return this._trash;
			}
			set
			{
				if ((this._trash != value))
				{
					this._trash = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.receipt")]
	public partial class receipt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _provider_id;
		
		private string _staff_id;
		
		private System.DateTime _created;
		
		private System.Nullable<System.DateTime> _modified;
		
		private bool _trash;
		
		private EntitySet<receipt_detail> _receipt_details;
		
		private EntityRef<provider> _provider;
		
		private EntityRef<staff> _staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void Onprovider_idChanging(string value);
    partial void Onprovider_idChanged();
    partial void Onstaff_idChanging(string value);
    partial void Onstaff_idChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnmodifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnmodifiedChanged();
    partial void OntrashChanging(bool value);
    partial void OntrashChanged();
    #endregion
		
		public receipt()
		{
			this._receipt_details = new EntitySet<receipt_detail>(new Action<receipt_detail>(this.attach_receipt_details), new Action<receipt_detail>(this.detach_receipt_details));
			this._provider = default(EntityRef<provider>);
			this._staff = default(EntityRef<staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_provider_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string provider_id
		{
			get
			{
				return this._provider_id;
			}
			set
			{
				if ((this._provider_id != value))
				{
					if (this._provider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onprovider_idChanging(value);
					this.SendPropertyChanging();
					this._provider_id = value;
					this.SendPropertyChanged("provider_id");
					this.Onprovider_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string staff_id
		{
			get
			{
				return this._staff_id;
			}
			set
			{
				if ((this._staff_id != value))
				{
					if (this._staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstaff_idChanging(value);
					this.SendPropertyChanging();
					this._staff_id = value;
					this.SendPropertyChanged("staff_id");
					this.Onstaff_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified", DbType="DateTime")]
		public System.Nullable<System.DateTime> modified
		{
			get
			{
				return this._modified;
			}
			set
			{
				if ((this._modified != value))
				{
					this.OnmodifiedChanging(value);
					this.SendPropertyChanging();
					this._modified = value;
					this.SendPropertyChanged("modified");
					this.OnmodifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trash", DbType="Bit NOT NULL")]
		public bool trash
		{
			get
			{
				return this._trash;
			}
			set
			{
				if ((this._trash != value))
				{
					this.OntrashChanging(value);
					this.SendPropertyChanging();
					this._trash = value;
					this.SendPropertyChanged("trash");
					this.OntrashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="receipt_receipt_detail", Storage="_receipt_details", ThisKey="id", OtherKey="receipt_id")]
		public EntitySet<receipt_detail> receipt_details
		{
			get
			{
				return this._receipt_details;
			}
			set
			{
				this._receipt_details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="provider_receipt", Storage="_provider", ThisKey="provider_id", OtherKey="id", IsForeignKey=true)]
		public provider provider
		{
			get
			{
				return this._provider.Entity;
			}
			set
			{
				provider previousValue = this._provider.Entity;
				if (((previousValue != value) 
							|| (this._provider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._provider.Entity = null;
						previousValue.receipts.Remove(this);
					}
					this._provider.Entity = value;
					if ((value != null))
					{
						value.receipts.Add(this);
						this._provider_id = value.id;
					}
					else
					{
						this._provider_id = default(string);
					}
					this.SendPropertyChanged("provider");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="staff_receipt", Storage="_staff", ThisKey="staff_id", OtherKey="id", IsForeignKey=true)]
		public staff staff
		{
			get
			{
				return this._staff.Entity;
			}
			set
			{
				staff previousValue = this._staff.Entity;
				if (((previousValue != value) 
							|| (this._staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._staff.Entity = null;
						previousValue.receipts.Remove(this);
					}
					this._staff.Entity = value;
					if ((value != null))
					{
						value.receipts.Add(this);
						this._staff_id = value.id;
					}
					else
					{
						this._staff_id = default(string);
					}
					this.SendPropertyChanged("staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_receipt_details(receipt_detail entity)
		{
			this.SendPropertyChanging();
			entity.receipt = this;
		}
		
		private void detach_receipt_details(receipt_detail entity)
		{
			this.SendPropertyChanging();
			entity.receipt = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.receipt_detail")]
	public partial class receipt_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _receipt_id;
		
		private string _product_id;
		
		private int _quantity;
		
		private int _monetized;
		
		private System.DateTime _created;
		
		private System.Nullable<System.DateTime> _modified;
		
		private bool _trash;
		
		private EntityRef<product> _product;
		
		private EntityRef<receipt> _receipt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void Onreceipt_idChanging(string value);
    partial void Onreceipt_idChanged();
    partial void Onproduct_idChanging(string value);
    partial void Onproduct_idChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void OnmonetizedChanging(int value);
    partial void OnmonetizedChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnmodifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnmodifiedChanged();
    partial void OntrashChanging(bool value);
    partial void OntrashChanged();
    #endregion
		
		public receipt_detail()
		{
			this._product = default(EntityRef<product>);
			this._receipt = default(EntityRef<receipt>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receipt_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string receipt_id
		{
			get
			{
				return this._receipt_id;
			}
			set
			{
				if ((this._receipt_id != value))
				{
					if (this._receipt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onreceipt_idChanging(value);
					this.SendPropertyChanging();
					this._receipt_id = value;
					this.SendPropertyChanged("receipt_id");
					this.Onreceipt_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monetized", DbType="Int NOT NULL")]
		public int monetized
		{
			get
			{
				return this._monetized;
			}
			set
			{
				if ((this._monetized != value))
				{
					this.OnmonetizedChanging(value);
					this.SendPropertyChanging();
					this._monetized = value;
					this.SendPropertyChanged("monetized");
					this.OnmonetizedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified", DbType="DateTime")]
		public System.Nullable<System.DateTime> modified
		{
			get
			{
				return this._modified;
			}
			set
			{
				if ((this._modified != value))
				{
					this.OnmodifiedChanging(value);
					this.SendPropertyChanging();
					this._modified = value;
					this.SendPropertyChanged("modified");
					this.OnmodifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trash", DbType="Bit NOT NULL")]
		public bool trash
		{
			get
			{
				return this._trash;
			}
			set
			{
				if ((this._trash != value))
				{
					this.OntrashChanging(value);
					this.SendPropertyChanging();
					this._trash = value;
					this.SendPropertyChanged("trash");
					this.OntrashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_receipt_detail", Storage="_product", ThisKey="product_id", OtherKey="id", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.receipt_details.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.receipt_details.Add(this);
						this._product_id = value.id;
					}
					else
					{
						this._product_id = default(string);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="receipt_receipt_detail", Storage="_receipt", ThisKey="receipt_id", OtherKey="id", IsForeignKey=true)]
		public receipt receipt
		{
			get
			{
				return this._receipt.Entity;
			}
			set
			{
				receipt previousValue = this._receipt.Entity;
				if (((previousValue != value) 
							|| (this._receipt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._receipt.Entity = null;
						previousValue.receipt_details.Remove(this);
					}
					this._receipt.Entity = value;
					if ((value != null))
					{
						value.receipt_details.Add(this);
						this._receipt_id = value.id;
					}
					else
					{
						this._receipt_id = default(string);
					}
					this.SendPropertyChanged("receipt");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.staff_permission")]
	public partial class staff_permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _staff_id;
		
		private string _permission_id;
		
		private bool _allow;
		
		private bool _trash;
		
		private System.DateTime _created;
		
		private System.Nullable<System.DateTime> _modified;
		
		private EntityRef<permission> _permission;
		
		private EntityRef<staff> _staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void Onstaff_idChanging(string value);
    partial void Onstaff_idChanged();
    partial void Onpermission_idChanging(string value);
    partial void Onpermission_idChanged();
    partial void OnallowChanging(bool value);
    partial void OnallowChanged();
    partial void OntrashChanging(bool value);
    partial void OntrashChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnmodifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnmodifiedChanged();
    #endregion
		
		public staff_permission()
		{
			this._permission = default(EntityRef<permission>);
			this._staff = default(EntityRef<staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string staff_id
		{
			get
			{
				return this._staff_id;
			}
			set
			{
				if ((this._staff_id != value))
				{
					if (this._staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstaff_idChanging(value);
					this.SendPropertyChanging();
					this._staff_id = value;
					this.SendPropertyChanged("staff_id");
					this.Onstaff_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permission_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string permission_id
		{
			get
			{
				return this._permission_id;
			}
			set
			{
				if ((this._permission_id != value))
				{
					if (this._permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpermission_idChanging(value);
					this.SendPropertyChanging();
					this._permission_id = value;
					this.SendPropertyChanged("permission_id");
					this.Onpermission_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_allow", DbType="Bit NOT NULL")]
		public bool allow
		{
			get
			{
				return this._allow;
			}
			set
			{
				if ((this._allow != value))
				{
					this.OnallowChanging(value);
					this.SendPropertyChanging();
					this._allow = value;
					this.SendPropertyChanged("allow");
					this.OnallowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trash", DbType="Bit NOT NULL")]
		public bool trash
		{
			get
			{
				return this._trash;
			}
			set
			{
				if ((this._trash != value))
				{
					this.OntrashChanging(value);
					this.SendPropertyChanging();
					this._trash = value;
					this.SendPropertyChanged("trash");
					this.OntrashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified", DbType="DateTime")]
		public System.Nullable<System.DateTime> modified
		{
			get
			{
				return this._modified;
			}
			set
			{
				if ((this._modified != value))
				{
					this.OnmodifiedChanging(value);
					this.SendPropertyChanging();
					this._modified = value;
					this.SendPropertyChanged("modified");
					this.OnmodifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="permission_staff_permission", Storage="_permission", ThisKey="permission_id", OtherKey="id", IsForeignKey=true)]
		public permission permission
		{
			get
			{
				return this._permission.Entity;
			}
			set
			{
				permission previousValue = this._permission.Entity;
				if (((previousValue != value) 
							|| (this._permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._permission.Entity = null;
						previousValue.staff_permissions.Remove(this);
					}
					this._permission.Entity = value;
					if ((value != null))
					{
						value.staff_permissions.Add(this);
						this._permission_id = value.id;
					}
					else
					{
						this._permission_id = default(string);
					}
					this.SendPropertyChanged("permission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="staff_staff_permission", Storage="_staff", ThisKey="staff_id", OtherKey="id", IsForeignKey=true)]
		public staff staff
		{
			get
			{
				return this._staff.Entity;
			}
			set
			{
				staff previousValue = this._staff.Entity;
				if (((previousValue != value) 
							|| (this._staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._staff.Entity = null;
						previousValue.staff_permissions.Remove(this);
					}
					this._staff.Entity = value;
					if ((value != null))
					{
						value.staff_permissions.Add(this);
						this._staff_id = value.id;
					}
					else
					{
						this._staff_id = default(string);
					}
					this.SendPropertyChanged("staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.warranty")]
	public partial class warranty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _customer_id;
		
		private string _staff_id;
		
		private string _status;
		
		private System.DateTime _created;
		
		private System.Nullable<System.DateTime> _modified;
		
		private bool _trash;
		
		private EntitySet<warranty_detail> _warranty_details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void Oncustomer_idChanging(string value);
    partial void Oncustomer_idChanged();
    partial void Onstaff_idChanging(string value);
    partial void Onstaff_idChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnmodifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnmodifiedChanged();
    partial void OntrashChanging(bool value);
    partial void OntrashChanged();
    #endregion
		
		public warranty()
		{
			this._warranty_details = new EntitySet<warranty_detail>(new Action<warranty_detail>(this.attach_warranty_details), new Action<warranty_detail>(this.detach_warranty_details));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string staff_id
		{
			get
			{
				return this._staff_id;
			}
			set
			{
				if ((this._staff_id != value))
				{
					this.Onstaff_idChanging(value);
					this.SendPropertyChanging();
					this._staff_id = value;
					this.SendPropertyChanged("staff_id");
					this.Onstaff_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NChar(2)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified", DbType="DateTime")]
		public System.Nullable<System.DateTime> modified
		{
			get
			{
				return this._modified;
			}
			set
			{
				if ((this._modified != value))
				{
					this.OnmodifiedChanging(value);
					this.SendPropertyChanging();
					this._modified = value;
					this.SendPropertyChanged("modified");
					this.OnmodifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trash", DbType="Bit NOT NULL")]
		public bool trash
		{
			get
			{
				return this._trash;
			}
			set
			{
				if ((this._trash != value))
				{
					this.OntrashChanging(value);
					this.SendPropertyChanging();
					this._trash = value;
					this.SendPropertyChanged("trash");
					this.OntrashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="warranty_warranty_detail", Storage="_warranty_details", ThisKey="id", OtherKey="warranty_id")]
		public EntitySet<warranty_detail> warranty_details
		{
			get
			{
				return this._warranty_details;
			}
			set
			{
				this._warranty_details.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_warranty_details(warranty_detail entity)
		{
			this.SendPropertyChanging();
			entity.warranty = this;
		}
		
		private void detach_warranty_details(warranty_detail entity)
		{
			this.SendPropertyChanging();
			entity.warranty = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.staff")]
	public partial class staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _username;
		
		private string _password;
		
		private string _name;
		
		private System.DateTime _birthday;
		
		private bool _gender;
		
		private string _address;
		
		private string _email;
		
		private System.DateTime _created;
		
		private System.Nullable<System.DateTime> _modified;
		
		private bool _administrator;
		
		private bool _trash;
		
		private EntitySet<receipt> _receipts;
		
		private EntitySet<staff_permission> _staff_permissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnbirthdayChanging(System.DateTime value);
    partial void OnbirthdayChanged();
    partial void OngenderChanging(bool value);
    partial void OngenderChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnmodifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnmodifiedChanged();
    partial void OnadministratorChanging(bool value);
    partial void OnadministratorChanged();
    partial void OntrashChanging(bool value);
    partial void OntrashChanged();
    #endregion
		
		public staff()
		{
			this._receipts = new EntitySet<receipt>(new Action<receipt>(this.attach_receipts), new Action<receipt>(this.detach_receipts));
			this._staff_permissions = new EntitySet<staff_permission>(new Action<staff_permission>(this.attach_staff_permissions), new Action<staff_permission>(this.detach_staff_permissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="Date NOT NULL")]
		public System.DateTime birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="Bit NOT NULL")]
		public bool gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified", DbType="DateTime")]
		public System.Nullable<System.DateTime> modified
		{
			get
			{
				return this._modified;
			}
			set
			{
				if ((this._modified != value))
				{
					this.OnmodifiedChanging(value);
					this.SendPropertyChanging();
					this._modified = value;
					this.SendPropertyChanged("modified");
					this.OnmodifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_administrator", DbType="Bit NOT NULL")]
		public bool administrator
		{
			get
			{
				return this._administrator;
			}
			set
			{
				if ((this._administrator != value))
				{
					this.OnadministratorChanging(value);
					this.SendPropertyChanging();
					this._administrator = value;
					this.SendPropertyChanged("administrator");
					this.OnadministratorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trash", DbType="Bit NOT NULL")]
		public bool trash
		{
			get
			{
				return this._trash;
			}
			set
			{
				if ((this._trash != value))
				{
					this.OntrashChanging(value);
					this.SendPropertyChanging();
					this._trash = value;
					this.SendPropertyChanged("trash");
					this.OntrashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="staff_receipt", Storage="_receipts", ThisKey="id", OtherKey="staff_id")]
		public EntitySet<receipt> receipts
		{
			get
			{
				return this._receipts;
			}
			set
			{
				this._receipts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="staff_staff_permission", Storage="_staff_permissions", ThisKey="id", OtherKey="staff_id")]
		public EntitySet<staff_permission> staff_permissions
		{
			get
			{
				return this._staff_permissions;
			}
			set
			{
				this._staff_permissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_receipts(receipt entity)
		{
			this.SendPropertyChanging();
			entity.staff = this;
		}
		
		private void detach_receipts(receipt entity)
		{
			this.SendPropertyChanging();
			entity.staff = null;
		}
		
		private void attach_staff_permissions(staff_permission entity)
		{
			this.SendPropertyChanging();
			entity.staff = this;
		}
		
		private void detach_staff_permissions(staff_permission entity)
		{
			this.SendPropertyChanging();
			entity.staff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.category")]
	public partial class category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _cat_id;
		
		private string _name;
		
		private string _parent_id;
		
		private string _describe;
		
		private System.DateTime _created;
		
		private System.Nullable<System.DateTime> _modified;
		
		private bool _trash;
		
		private EntitySet<product> _products;
		
		private EntitySet<category> _categories;
		
		private EntityRef<category> _category1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncat_idChanging(string value);
    partial void Oncat_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onparent_idChanging(string value);
    partial void Onparent_idChanged();
    partial void OndescribeChanging(string value);
    partial void OndescribeChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnmodifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnmodifiedChanged();
    partial void OntrashChanging(bool value);
    partial void OntrashChanged();
    #endregion
		
		public category()
		{
			this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
			this._categories = new EntitySet<category>(new Action<category>(this.attach_categories), new Action<category>(this.detach_categories));
			this._category1 = default(EntityRef<category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string cat_id
		{
			get
			{
				return this._cat_id;
			}
			set
			{
				if ((this._cat_id != value))
				{
					this.Oncat_idChanging(value);
					this.SendPropertyChanging();
					this._cat_id = value;
					this.SendPropertyChanged("cat_id");
					this.Oncat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent_id", DbType="NVarChar(10)")]
		public string parent_id
		{
			get
			{
				return this._parent_id;
			}
			set
			{
				if ((this._parent_id != value))
				{
					if (this._category1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onparent_idChanging(value);
					this.SendPropertyChanging();
					this._parent_id = value;
					this.SendPropertyChanged("parent_id");
					this.Onparent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_describe", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string describe
		{
			get
			{
				return this._describe;
			}
			set
			{
				if ((this._describe != value))
				{
					this.OndescribeChanging(value);
					this.SendPropertyChanging();
					this._describe = value;
					this.SendPropertyChanged("describe");
					this.OndescribeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified", DbType="DateTime")]
		public System.Nullable<System.DateTime> modified
		{
			get
			{
				return this._modified;
			}
			set
			{
				if ((this._modified != value))
				{
					this.OnmodifiedChanging(value);
					this.SendPropertyChanging();
					this._modified = value;
					this.SendPropertyChanged("modified");
					this.OnmodifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trash", DbType="Bit NOT NULL")]
		public bool trash
		{
			get
			{
				return this._trash;
			}
			set
			{
				if ((this._trash != value))
				{
					this.OntrashChanging(value);
					this.SendPropertyChanging();
					this._trash = value;
					this.SendPropertyChanged("trash");
					this.OntrashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_product", Storage="_products", ThisKey="cat_id", OtherKey="cat_id")]
		public EntitySet<product> products
		{
			get
			{
				return this._products;
			}
			set
			{
				this._products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_category", Storage="_categories", ThisKey="cat_id", OtherKey="parent_id")]
		public EntitySet<category> categories
		{
			get
			{
				return this._categories;
			}
			set
			{
				this._categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_category", Storage="_category1", ThisKey="parent_id", OtherKey="cat_id", IsForeignKey=true)]
		public category category1
		{
			get
			{
				return this._category1.Entity;
			}
			set
			{
				category previousValue = this._category1.Entity;
				if (((previousValue != value) 
							|| (this._category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._category1.Entity = null;
						previousValue.categories.Remove(this);
					}
					this._category1.Entity = value;
					if ((value != null))
					{
						value.categories.Add(this);
						this._parent_id = value.cat_id;
					}
					else
					{
						this._parent_id = default(string);
					}
					this.SendPropertyChanged("category1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.category = this;
		}
		
		private void detach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.category = null;
		}
		
		private void attach_categories(category entity)
		{
			this.SendPropertyChanging();
			entity.category1 = this;
		}
		
		private void detach_categories(category entity)
		{
			this.SendPropertyChanging();
			entity.category1 = null;
		}
	}
}
#pragma warning restore 1591
